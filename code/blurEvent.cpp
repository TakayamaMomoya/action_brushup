//*****************************************************
//
// ブラーイベントの処理[blurEvent.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "blurEvent.h"
#include "blur.h"
#include "manager.h"

//*****************************************************
// 静的メンバ変数宣言
//*****************************************************
CBlurEvent *CBlurEvent::m_pBlurEvent = nullptr;	// 自身のポインタ

//=====================================================
// コンストラクタ
//=====================================================
CBlurEvent::CBlurEvent() : m_fDensityBlur(0.0f), m_fSizeBlur(0.0f), m_fTimerBlur(0.0f), m_fTimerInitial(0.0f)
{

}

//=====================================================
// デストラクタ
//=====================================================
CBlurEvent::~CBlurEvent()
{

}

//=====================================================
// 生成処理
//=====================================================
CBlurEvent *CBlurEvent::Create(void)
{
	if (m_pBlurEvent == nullptr)
	{
		m_pBlurEvent = new CBlurEvent;

		if (m_pBlurEvent != nullptr)
		{
			m_pBlurEvent->Init();
		}
	}

	return m_pBlurEvent;
}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CBlurEvent::Init(void)
{
	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CBlurEvent::Uninit(void)
{
	m_pBlurEvent = nullptr;

	Release();
}

//=====================================================
// 更新処理
//=====================================================
void CBlurEvent::Update(void)
{
	m_fTimerBlur -= CManager::GetDeltaTime();

	if (m_fTimerBlur < 0.0f)
	{// イベントの終了とともに自身を破棄
		// イベントの終了
		Blur::ResetBlur();

		// 自身の終了
		Uninit();

		return;
	}
}

//=====================================================
// 描画処理
//=====================================================
void CBlurEvent::Draw(void)
{

}